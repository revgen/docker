#!/usr/bin/env bash
# ############################################################################
#
#
# ############################################################################
if [ ! -f "./Dockerfile" ]; then
    echo "Error: can't find Dockerfile in the $(pwd)"
    exit 1
fi
GITHUB_ENV=${GITHUB_ENV:-"/dev/stdout"}
IMAGE_NAME=${1:-"${IMAGE_NAME}"}
echo "Get docker image version from the ./Dockerfile"
image_name_from_file=$(cat ./Dockerfile | grep "IMAGE_NAME" | head -n 1 | cut -d'"' -f2)
if [ -z "${image_name_from_file}" ]; then
    image_name_from_file=$(cat ./Dockerfile | grep "image.name\n|ARG NAME" | cut -d'"' -f2)
fi
if [ -z "${image_name_from_file}" ] || [ "${image_name_from_file}" != "${IMAGE_NAME}" ]; then
    echo "Error: image name not found or it is incorrect: ${image_name_from_file} != ${IMAGE_NAME}"; exit 1;
fi
IMAGE_VERSION=$(cat ./Dockerfile | grep "BUILD_VERSION\|IMAGE_VERSION" | head -n 1 | cut -d'"' -f2)
if [ -z "${IMAGE_VERSION}" ]; then
    IMAGE_VERSION=$(cat ./Dockerfile | grep "image.version\|ARG VERSION" | cut -d'"' -f2)
fi
if [ -z "${IMAGE_VERSION}" ] || [ -z "${IMAGE_VERSION}" ]; then
    echo "Error: image version not found in the Dockerfile."; exit 1;
fi
echo "Found version: ${IMAGE_NAME} v${IMAGE_VERSION}"

echo "Check existing version"
REPO_IMAGE_VERSION="$("$(dirname "${0}")/../scripts/docker-image-tags" "${IMAGE_NAME}" 2>/dev/null | grep '[0-9]\.[0-9]\.[0-9]' | head -n 1)"
echo "Image remote version is ${REPO_IMAGE_VERSION:-"null"}"
if [ -n "${GITHUB_ENV}" ]; then
    echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV
    echo "REPO_IMAGE_VERSION=$REPO_IMAGE_VERSION" >> $GITHUB_ENV
fi
if [ "${IMAGE_VERSION}" == "${REPO_IMAGE_VERSION}" ]; then
    echo "Version ${IMAGE_NAME}:${IMAGE_VERSION} already exists on the registry."
    exit 1
else
    echo "Image ${IMAGE_NAME}:${IMAGE_VERSION} need to be pushing to the registry"
    exit 0
fi