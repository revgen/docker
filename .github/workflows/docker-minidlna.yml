name: Docker Image - MiniDLNA

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-docker-minidlna:
    runs-on: ubuntu-latest
    name: "Build docker-minidlna"
    defaults:
      run:
        working-directory: ./docker-minidlna
    env:
      IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/minidlna
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
      - name: Get docker image metadata
        continue-on-error: true
        run: |
          ../.github/docker-check-image-version "${IMAGE_NAME}" || true
          ../.github/docker-image-description "${IMAGE_NAME}" || true
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        if: env.IMAGE_VERSION != env.REPO_IMAGE_VERSION
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_TOKEN }}
        # Setting up Docker Buildx with docker-container driver is required
        # at the moment to be able to use a subdirectory with Git context
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: env.IMAGE_VERSION != env.REPO_IMAGE_VERSION
      - name: Build and push to the Docker Hub registry
        uses: docker/build-push-action@v3
        id: docker_build
        if: env.IMAGE_VERSION != env.REPO_IMAGE_VERSION
        with:
          context: "{{defaultContext}}:docker-minidlna"
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        if: env.IMAGE_VERSION != env.REPO_IMAGE_VERSION
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          repository: ${{ env.IMAGE_NAME }}
          short-description: ${{ env.IMAGE_DESCRIPTION }}
          readme-filepath: ./docker-minidlna/README.md
      - name: Build status
        if: success()
        working-directory: ./.github
        run: ./github-build-status "${IMAGE_NAME}" "${IMAGE_VERSION}" "${REPO_IMAGE_VERSION}" "${{ steps.docker_build.outputs.digest }}"